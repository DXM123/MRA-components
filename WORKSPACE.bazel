workspace(name = "MRA")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")

# JSON
http_archive(
    name = "nlohmann_json",
    build_file = "//dependencies/bazel:BUILD.nlohmann_json",
    sha256 = "b1b92b169e42b5dc2a51b644ba3b3a414e2451d580331d43801244c7e863f060",
    strip_prefix = "json-a6ee8bf9d94ef783f21f955d4125d5f3924d2c8e",
    urls = ["https://github.com/nlohmann/json/archive/a6ee8bf9d94ef783f21f955d4125d5f3924d2c8e.tar.gz"],
    workspace_file_content = 'workspace(name = "nlohmann_json")',
)

# gtest
http_archive(
    name = "com_google_googletest",
    sha256 = "0fb00ff413f6b9b80ccee44a374ca7a18af7315aea72a43c62f2acd1ca74e9b5",
    strip_prefix = "googletest-f13bbe2992d188e834339abe6f715b2b2f840a77",
    urls = [
        "https://github.com/google/googletest/archive/f13bbe2992d188e834339abe6f715b2b2f840a77.tar.gz",
    ],
)

# Make system installation of opencv available (because opencv is used a lot next to bazel build use case)
new_local_repository(
    name = "opencv",
    path = "/usr/include/opencv4",
    build_file = "dependencies/bazel/BUILD.opencv",
)

###
# Pybind11
###
# See https://github.com/pybind/pybind11_bazel
http_archive(
    name = "pybind11_bazel",
    strip_prefix = "pybind11_bazel-72cbbf1fbc830e487e3012862b7b720001b70672",
    sha256 = "516c1b3a10d87740d2b7de6f121f8e19dde2c372ecbfe59aef44cd1872c10395",
    urls = ["https://github.com/pybind/pybind11_bazel/archive/72cbbf1fbc830e487e3012862b7b720001b70672.tar.gz"],
)

# We still require the pybind library.
http_archive(
    name = "pybind11",
    build_file = "@pybind11_bazel//:pybind11.BUILD",
    strip_prefix = "pybind11-2.9.0",
    sha256 = "057fb68dafd972bc13afb855f3b0d8cf0fa1a78ef053e815d9af79be7ff567cb",
    urls = ["https://github.com/pybind/pybind11/archive/refs/tags/v2.9.0.tar.gz"],
)

load("@pybind11_bazel//:python_configure.bzl", "python_configure")
python_configure(name = "local_config_python")

###
# Protobuf
###
http_archive(
    name = "com_google_protobuf",
    sha256 = "25680843adf0c3302648d35f744e38cc3b6b05a6c77a927de5aea3e1c2e36106",
    strip_prefix = "protobuf-3.19.4",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/refs/tags/v3.19.4.zip"],
    # note: on Ubuntu20, opencv DNN libraries depend on an older conflicting protobuf version
    # note: py_proto_library might spam warnings:
    #    "com_google_protobuf/python: warning: directory does not exist"
    #    -> require a fix from 22Q1 - https://github.com/protocolbuffers/protobuf/issues/6049
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

# GRPC v1.42, for proto rules.
# For a related discussion of the pro/cons of various open-source py proto rule
# repositories, see b/189457935.
http_archive(
    name = "com_github_grpc_grpc",
    sha256 = "9f387689b7fdf6c003fd90ef55853107f89a2121792146770df5486f0199f400",
    strip_prefix = "grpc-1.42.0",
    urls = ["https://github.com/grpc/grpc/archive/v1.42.0.zip"],
)

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
grpc_deps()

bind(
    name = "python_headers",
    actual = "@local_config_python//:python_headers",
)

###
# Pybind11 + Protobuf
###
git_repository(
    name = "pybind11_protobuf",
    shallow_since = "1642616122 -0800",
    commit = "f20537c3285636716ed86a7ef96baa19a788c944", # Latest (2022-01-19)
    remote = "https://github.com/pybind/pybind11_protobuf.git",
)
